; generated by ARM/Thumb C/C++ Compiler with , RVCT3.1 [Build 939] for uVision
; commandline ArmCC [--debug -c --asm --interleave -oaccelerometer_interface.o --depend=accelerometer_interface.d --device=DARMP --apcs=interwork -O0 -I"C:\Program Files\Keil\ARM\INC\Philips" --omf_browse=accelerometer_interface.crf accelerometer_interface.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  read_accel_x PROC
;;;17     /* Functie de citire a axei X */
;;;18     unsigned int read_accel_x(void){
000000  e92d4010          PUSH     {r4,lr}
;;;19          // valoarea tensiunii de la iesirea X a accelerometrului
;;;20     	 unsigned int value;
;;;21     	// activare functie ADC pt P0.22 in PINSEL1
;;;22     	PINSEL1 |= (1<<12);
000004  e59f0074          LDR      r0,|L1.128|
000008  e5900004          LDR      r0,[r0,#4]
00000c  e3800a01          ORR      r0,r0,#0x1000
000010  e59f1068          LDR      r1,|L1.128|
000014  e5810004          STR      r0,[r1,#4]
;;;23     	PINSEL1 &=~(1<<13);
000018  e1a00001          MOV      r0,r1
00001c  e5900004          LDR      r0,[r0,#4]
000020  e3c00a02          BIC      r0,r0,#0x2000
000024  e5810004          STR      r0,[r1,#4]
;;;24          value = read_adc1(7);
000028  e3a00007          MOV      r0,#7
00002c  ebfffffe          BL       read_adc1
000030  e1a04000          MOV      r4,r0
;;;25     	 // returneaza valoarea citita 
;;;26     	 return (value);
000034  e1a00004          MOV      r0,r4
000038  e8bd4010          POP      {r4,lr}
;;;27     }
00003c  e12fff1e          BX       lr
;;;28     
                          ENDP

                  read_accel_y PROC
;;;29     /* Functie de citire a axei Y */
;;;30     unsigned int read_accel_y(void){ 
000040  e92d4010          PUSH     {r4,lr}
;;;31          // valoarea tensiunii de la iesirea Y a accelerometrului
;;;32     	 unsigned int value;
;;;33     	// activare functie ADC pt P0.22 in PINSEL1
;;;34     	PINSEL1 |= (1<<11);
000044  e59f0034          LDR      r0,|L1.128|
000048  e5900004          LDR      r0,[r0,#4]
00004c  e3800b02          ORR      r0,r0,#0x800
000050  e59f1028          LDR      r1,|L1.128|
000054  e5810004          STR      r0,[r1,#4]
;;;35     	PINSEL1 &=~(1<<10);
000058  e1a00001          MOV      r0,r1
00005c  e5900004          LDR      r0,[r0,#4]
000060  e3c00b01          BIC      r0,r0,#0x400
000064  e5810004          STR      r0,[r1,#4]
;;;36           value = read_adc1(6);
000068  e3a00006          MOV      r0,#6
00006c  ebfffffe          BL       read_adc1
000070  e1a04000          MOV      r4,r0
;;;37     	 // returneaza valoarea citita 
;;;38     	 return (value);
000074  e1a00004          MOV      r0,r4
000078  e8bd4010          POP      {r4,lr}
;;;39     }
00007c  e12fff1e          BX       lr
                          ENDP

                  |L1.128|
000080  e002c000          DCD      0xe002c000
