; generated by ARM/Thumb C/C++ Compiler with , RVCT3.1 [Build 939] for uVision
; commandline ArmCC [--debug -c --asm --interleave -omain.o --depend=main.d --device=DARMP --apcs=interwork -O0 -I"C:\Program Files\Keil\ARM\INC\Philips" --omf_browse=main.crf main.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  main PROC
;;;29     
;;;30     int main(void){
000000  e92d4010          PUSH     {r4,lr}
;;;31          /* initializare bucla pll, acces memorie ... */
;;;32     	 init_system();
000004  ebfffffe          BL       init_system
;;;33        	 /* initializare uart0/1 */
;;;34     	 init_uart0();
000008  ebfffffe          BL       init_uart0
;;;35     	 init_uart1();
00000c  ebfffffe          BL       init_uart1
;;;36     	 /* init var */ 
;;;37     	 idx = 0;
000010  e3a00000          MOV      r0,#0
000014  e59f11cc          LDR      r1,|L1.488|
000018  e5810000          STR      r0,[r1,#0]  ; idx
;;;38     	 rbfull = 0;
00001c  e59f11c8          LDR      r1,|L1.492|
000020  e5810000          STR      r0,[r1,#0]  ; rbfull
;;;39     	 rx_cnt = 0;
000024  e59f11c4          LDR      r1,|L1.496|
000028  e5810000          STR      r0,[r1,#0]  ; rx_cnt
;;;40     	 /* initializari modul GPS */
;;;41     	 is_origin_set = 0;
00002c  e59f11c0          LDR      r1,|L1.500|
000030  e5810000          STR      r0,[r1,#0]  ; is_origin_set
;;;42     	 state = 0;
000034  e59f11bc          LDR      r1,|L1.504|
000038  e5810000          STR      r0,[r1,#0]  ; state
;;;43     	 is_valid_packet = 0;
00003c  e59f11b8          LDR      r1,|L1.508|
000040  e5810000          STR      r0,[r1,#0]  ; is_valid_packet
;;;44     	 
;;;45      // initializarea convertoareloe ADC
;;;46      init_adc();
000044  ebfffffe          BL       init_adc
;;;47      // activare lant de sonare (BW=1)
;;;48      enable_sonar_chain();
000048  ebfffffe          BL       enable_sonar_chain
;;;49      // bucla principala a aplicatiei
;;;50       while(1){
00004c  ea000064          B        |L1.484|
                  |L1.80|
;;;51     
;;;52     #if 0
;;;53            // strobare pentru citire inlantuita a sonarelor
;;;54     	   format_sonar_data_and_send(read_sonar(1));
;;;55     	   format_sonar_data_and_send(read_sonar(2));
;;;56     	   format_sonar_data_and_send(read_sonar(3));
;;;57     	    format_sonar_data_and_send(read_sonar(4));
;;;58     		format_sonar_data_and_send(read_sonar(5));
;;;59     	   putchar_uart0(0x0D);
;;;60     
;;;61     #endif
;;;62     	   /* contor sumare mediere */
;;;63     	   i++;
000050  e59f01a8          LDR      r0,|L1.512|
000054  e5900000          LDR      r0,[r0,#0]  ; i
000058  e2800001          ADD      r0,r0,#1
00005c  e59f119c          LDR      r1,|L1.512|
000060  e5810000          STR      r0,[r1,#0]  ; i
;;;64     	   /* citirea valorilor de la sonare */
;;;65     	   s1val += read_sonar(1);
000064  e3a00001          MOV      r0,#1
000068  ebfffffe          BL       read_sonar
00006c  e59f1190          LDR      r1,|L1.516|
000070  e5911000          LDR      r1,[r1,#0]  ; s1val
000074  e0800001          ADD      r0,r0,r1
000078  e59f1184          LDR      r1,|L1.516|
00007c  e5810000          STR      r0,[r1,#0]  ; s1val
;;;66     	   s2val += read_sonar(2);
000080  e3a00002          MOV      r0,#2
000084  ebfffffe          BL       read_sonar
000088  e59f1178          LDR      r1,|L1.520|
00008c  e5911000          LDR      r1,[r1,#0]  ; s2val
000090  e0800001          ADD      r0,r0,r1
000094  e59f116c          LDR      r1,|L1.520|
000098  e5810000          STR      r0,[r1,#0]  ; s2val
;;;67     	   s3val += read_sonar(3);
00009c  e3a00003          MOV      r0,#3
0000a0  ebfffffe          BL       read_sonar
0000a4  e59f1160          LDR      r1,|L1.524|
0000a8  e5911000          LDR      r1,[r1,#0]  ; s3val
0000ac  e0800001          ADD      r0,r0,r1
0000b0  e59f1154          LDR      r1,|L1.524|
0000b4  e5810000          STR      r0,[r1,#0]  ; s3val
;;;68     	   s4val += read_sonar(4);
0000b8  e3a00004          MOV      r0,#4
0000bc  ebfffffe          BL       read_sonar
0000c0  e59f1148          LDR      r1,|L1.528|
0000c4  e5911000          LDR      r1,[r1,#0]  ; s4val
0000c8  e0800001          ADD      r0,r0,r1
0000cc  e59f113c          LDR      r1,|L1.528|
0000d0  e5810000          STR      r0,[r1,#0]  ; s4val
;;;69     	   s5val += read_sonar(5);
0000d4  e3a00005          MOV      r0,#5
0000d8  ebfffffe          BL       read_sonar
0000dc  e59f1130          LDR      r1,|L1.532|
0000e0  e5911000          LDR      r1,[r1,#0]  ; s5val
0000e4  e0800001          ADD      r0,r0,r1
0000e8  e59f1124          LDR      r1,|L1.532|
0000ec  e5810000          STR      r0,[r1,#0]  ; s5val
;;;70     	   if(i%div==0){
0000f0  e59f0120          LDR      r0,|L1.536|
0000f4  e5901000          LDR      r1,[r0,#0]  ; div
0000f8  e59f0100          LDR      r0,|L1.512|
0000fc  e5900000          LDR      r0,[r0,#0]  ; i
000100  ebfffffe          BL       __aeabi_idivmod
000104  e3510000          CMP      r1,#0
000108  1a000035          BNE      |L1.484|
;;;71     	   /*impachetarea formatata a valorilor */
;;;72     	   putchar_uart0('>');
00010c  e3a0003e          MOV      r0,#0x3e
000110  ebfffffe          BL       putchar_uart0
;;;73     	   putchar_uart0(',');
000114  e3a0002c          MOV      r0,#0x2c
000118  ebfffffe          BL       putchar_uart0
;;;74     	   /* sumeaza div valori si mediaza */	   
;;;75     	   format_sonar_data_and_send(s1val/div);
00011c  e59f00f4          LDR      r0,|L1.536|
000120  e5901000          LDR      r1,[r0,#0]  ; div
000124  e59f00d8          LDR      r0,|L1.516|
000128  e5900000          LDR      r0,[r0,#0]  ; s1val
00012c  ebfffffe          BL       __aeabi_idivmod
000130  e1a04000          MOV      r4,r0
000134  ebfffffe          BL       format_sonar_data_and_send
;;;76     
;;;77     	   format_sonar_data_and_send(s2val/div);
000138  e59f00d8          LDR      r0,|L1.536|
00013c  e5901000          LDR      r1,[r0,#0]  ; div
000140  e59f00c0          LDR      r0,|L1.520|
000144  e5900000          LDR      r0,[r0,#0]  ; s2val
000148  ebfffffe          BL       __aeabi_idivmod
00014c  e1a04000          MOV      r4,r0
000150  ebfffffe          BL       format_sonar_data_and_send
;;;78     	   format_sonar_data_and_send(s3val/div);
000154  e59f00bc          LDR      r0,|L1.536|
000158  e5901000          LDR      r1,[r0,#0]  ; div
00015c  e59f00a8          LDR      r0,|L1.524|
000160  e5900000          LDR      r0,[r0,#0]  ; s3val
000164  ebfffffe          BL       __aeabi_idivmod
000168  e1a04000          MOV      r4,r0
00016c  ebfffffe          BL       format_sonar_data_and_send
;;;79     	   format_sonar_data_and_send(s4val/div);
000170  e59f00a0          LDR      r0,|L1.536|
000174  e5901000          LDR      r1,[r0,#0]  ; div
000178  e59f0090          LDR      r0,|L1.528|
00017c  e5900000          LDR      r0,[r0,#0]  ; s4val
000180  ebfffffe          BL       __aeabi_idivmod
000184  e1a04000          MOV      r4,r0
000188  ebfffffe          BL       format_sonar_data_and_send
;;;80     	   format_sonar_data_and_send(s5val/div);
00018c  e59f0084          LDR      r0,|L1.536|
000190  e5901000          LDR      r1,[r0,#0]  ; div
000194  e59f0078          LDR      r0,|L1.532|
000198  e5900000          LDR      r0,[r0,#0]  ; s5val
00019c  ebfffffe          BL       __aeabi_idivmod
0001a0  e1a04000          MOV      r4,r0
0001a4  ebfffffe          BL       format_sonar_data_and_send
;;;81     	 
;;;82     	   putchar_uart0(0x0D); // trimite CR
0001a8  e3a0000d          MOV      r0,#0xd
0001ac  ebfffffe          BL       putchar_uart0
;;;83     	   /* resetare valori si index   */
;;;84     	   s1val = s2val = s3val = s4val = s5val = 0;
0001b0  e3a00000          MOV      r0,#0
0001b4  e59f1058          LDR      r1,|L1.532|
0001b8  e5810000          STR      r0,[r1,#0]  ; s5val
0001bc  e59f104c          LDR      r1,|L1.528|
0001c0  e5810000          STR      r0,[r1,#0]  ; s4val
0001c4  e59f1040          LDR      r1,|L1.524|
0001c8  e5810000          STR      r0,[r1,#0]  ; s3val
0001cc  e59f1034          LDR      r1,|L1.520|
0001d0  e5810000          STR      r0,[r1,#0]  ; s2val
0001d4  e59f1028          LDR      r1,|L1.516|
0001d8  e5810000          STR      r0,[r1,#0]  ; s1val
;;;85     	   i = 0;
0001dc  e59f101c          LDR      r1,|L1.512|
0001e0  e5810000          STR      r0,[r1,#0]  ; i
                  |L1.484|
0001e4  eaffff99          B        |L1.80|
;;;86     	   }
;;;87     
;;;88     	 /* cat timp primim date de la modulul GPS pe UART1 
;;;89     	    se preiau si se transmit pe uart0 evitand 
;;;90     		overflow pe buffer
;;;91           */
;;;92     /*
;;;93     	 while((rxbuf[idx]=(char)getchar_uart1())!=0){
;;;94     	    if(rxbuf[idx]=='L'){
;;;95     	 		txbuf[idx] = rxbuf[idx];
;;;96     			putchar_uart0(txbuf[idx]);
;;;97     			if(idx==255)idx=0;
;;;98     		  }
;;;99     		}
;;;100    	putchar_uart0(0x0D); // trimite CR
;;;101    */
;;;102      }	 // end while
;;;103    } // end main
                          ENDP

                  |L1.488|
0001e8  00000000          DCD      idx
                  |L1.492|
0001ec  00000000          DCD      rbfull
                  |L1.496|
0001f0  00000000          DCD      rx_cnt
                  |L1.500|
0001f4  00000000          DCD      is_origin_set
                  |L1.504|
0001f8  00000000          DCD      state
                  |L1.508|
0001fc  00000000          DCD      is_valid_packet
                  |L1.512|
000200  00000000          DCD      i
                  |L1.516|
000204  00000000          DCD      s1val
                  |L1.520|
000208  00000000          DCD      s2val
                  |L1.524|
00020c  00000000          DCD      s3val
                  |L1.528|
000210  00000000          DCD      s4val
                  |L1.532|
000214  00000000          DCD      s5val
                  |L1.536|
000218  00000000          DCD      ||div||

                          AREA ||.data||, DATA, ALIGN=2

                  s1val
000000  00000000          DCD      0x00000000
                  s2val
000004  00000000          DCD      0x00000000
                  s3val
000008  00000000          DCD      0x00000000
                  s4val
00000c  00000000          DCD      0x00000000
                  s5val
000010  00000000          DCD      0x00000000
                  i
000014  00000000          DCD      0x00000000
                  ||div||
000018  0000000f          DCD      0x0000000f
                  state
00001c  00000000          DCD      0x00000000
                  ||cnt||
000020  00000000          DCD      0x00000000
                  rx_cnt
000024  00000000          DCD      0x00000000
                  is_origin_set
000028  00000000          DCD      0x00000000
                  is_valid_packet
00002c  00000000          DCD      0x00000000
                  is_gpgll
000030  00000000          DCD      0x00000000
                  is_active
000034  00000000          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
